import Head from "next/head";
import Image from "next/image";
import React, { useState, useEffect } from "react";
import axios from "axios";

export default function Home() {
  /**
   * results - this will be our list (array) of results; because we said useState([]), it'll default to being an empty list.
   * setResults - this is a function that will let us change/update the "results".
   */
  const [results, setResults] = useState([]);

  /**
   * suggestion - the text from the textarea
   * setSuggestion - this is a function that'll let us update "suggestion"
   */
  const [suggestion, setSuggestion] = useState("");

  /**
   * Runs on mount (load essentially)
   */
  useEffect(() => {
    setResults(
      // The browser's localstorage only saves this stuff as strings, so we'll use JSON.parse to convert it back into an array
      JSON.parse(
        // Get the results from the browser, and if it doesn't exist, get "[]" as a default
        localStorage.getItem("results") ?? "[]"
      )
    );
  }, []);

  return (
    <div>
      <Head>
        <title>Pitch Bot</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="main">
        <div className="form">
          <h1  className="headline">PITCH BOT</h1>
          <p  className="headline">
            Enter some key words or a sentence about your desired plot and Pitch
            Bot will create a movie pitch just for you.
          </p>
          {/**
           * We don't want the form to refresh on submit so onSubmit we want to prevent the default event with event.preventDefault()
           */}
          <form
            className="form-input"
            onSubmit={(event) => event.preventDefault()}
          >
            {/**
             * the arrow function inside onChange will run every time we make a change in the textarea, that's what the "event" is.
             * event.target = the textarea
             * event.target.value = the text inside the textarea
             */}
            <textarea
              className="text-area"
              onChange={(event) => {
                setSuggestion(event.target.value);
              }}
              value={suggestion}
            />
            <button
              className="submit-button"
              onClick={() => {
                /**
                 * in nextjs, when you make an API, the endpoint is literally /api/{YOUR_FILE_NAME}
                 */
                axios
                  .post("/api/movie-pitch", { suggestion: suggestion })
                  .then((response) => {
                    // set new results
                    setResults([
                      {
                        suggestion: suggestion,
                        pilot: response.data.pitch,
                      },
                      ...results,
                    ]);

                    // clear suggestions
                    setSuggestion("");

                    // save to browser
                    localStorage.setItem(
                      "results",
                      // turn our new results into a string (localstorage only saves strings)
                      JSON.stringify([
                        {
                          suggestion: suggestion,
                          pilot: response.data.pitch,
                        },
                        ...results,
                      ])
                    );
                  })
              }}
            >
              Submit
              <i className="bi bi-play-circle-fill"></i>
            </button>
          </form>
        </div>
        <div className="results-strip">
          {
            /**
             * We need to map over our results and return our results-item jsx.
             *
             * The arrow function we use in the map runs on each item we have in our results array.
             *
             * What's inside the () of our arrow function are called function arguments. The first function
             * argument represents a single result.
             */
            results.map((result) => {
              return (
                <div className="results-item">
                  <p>
                    <strong>Suggestion:</strong> {result.suggestion}
                  </p>
                  <p>
                    <strong>Pitch:</strong> {result.pilot}
                  </p>
                </div>
              );
            })
          }
        </div>
      </main>
    </div>
  );
}
